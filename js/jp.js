// Generated by CoffeeScript 1.6.3
(function() {
  var JP;

  JP = (function() {
    function JP() {}

    JP.prototype.ws = null;

    JP.prototype.startWebSocket = function(callback) {
      this.startWSCallback = callback;
      this.ws = new WebSocket("ws://127.0.0.1:31415");
      this.ws.onerror = this.onWSError.bind(this);
      this.ws.onopen = this.onWSOpen.bind(this);
      this.ws.onclose = this.onWSClose.bind(this);
      return this.ws.onmessage = this.handleMessage.bind(this);
    };

    JP.prototype.handleMessage = function(message) {
      var data;
      data = message.data;
      return console.log(data);
    };

    JP.prototype.onWSOpen = function() {
      console.log("ws open");
      this.sendMessage("GAMEINIT");
      return this.startWSCallback();
    };

    JP.prototype.onWSError = function() {
      this.ws = null;
      return console.log("connection error");
    };

    JP.prototype.onWSClose = function() {
      this.ws = null;
      return console.log("connection close");
    };

    JP.prototype.sendMessage = function(msgObject) {
      var message, that;
      message = JSON.stringify(msgObject);
      that = this;
      if (this.ws === null) {
        return this.startWebSocket(function() {
          return that.ws.send(message);
        });
      } else {
        return this.ws.send(message);
      }
    };

    JP.prototype.connect = function(callback) {
      this.sendMessage({
        action: "connect"
      });
      return this.deviceConnectCallback = callback;
    };

    return JP;

  })();

  this.JP = new JP();

}).call(this);
